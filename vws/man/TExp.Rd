% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{TExp}
\alias{TExp}
\alias{n_texp}
\alias{integrate_texp}
\alias{d_texp}
\alias{p_texp}
\alias{q_texp}
\alias{r_texp}
\alias{mgf_texp}
\title{Truncated Exponential}
\usage{
n_texp(kappa, lo, hi, log = FALSE)

integrate_texp(a, b, kappa, lo, hi, log = FALSE)

d_texp(x, kappa, lo, hi, log = FALSE)

p_texp(q, kappa, lo, hi, lower = TRUE, log = FALSE)

q_texp(p, kappa, lo, hi, lower = TRUE, log = FALSE)

r_texp(n, kappa, lo, hi)

mgf_texp(s, kappa, lo, hi, log = FALSE)
}
\arguments{
\item{kappa}{Parameter of distribution.}

\item{lo}{Lower limit of support.}

\item{hi}{Upper limit of support.}

\item{log}{logical; if \code{TRUE}, probabilities are interpreted on the
log-scale. Otherwise, probabilities are interpreted on the original scale.}

\item{a}{Lower limit of integral.}

\item{b}{Upper limit of integral.}

\item{x}{Vector; argument of density.}

\item{q}{Vector; argument of quantile function.}

\item{lower}{logical; if \code{TRUE}, probabilities are \eqn{P(X \leq x)};
otherwise \eqn{P(X > x)}.}

\item{p}{Vector; argument of cumulative distribution function.}

\item{n}{Number of desired draws.}

\item{s}{Vector; argument of moment-generating function.}
}
\value{
\item{n_texp}{Normalizing constant.}
\item{integrate_texp}{Compute integral of density over an interval.}
\item{d_texp}{Compute density.}
\item{p_texp}{Compute cumulative probabilities.}
\item{q_texp}{Compute quantiles.}
\item{r_texp}{Generate variates.}
\item{mgf_texp}{Compute moment generating function.}
}
\description{
Functions for the truncated exponential distribution with density
\deqn{
f(x \mid \kappa, a, b) =
\frac{
\kappa e^{\kappa x}
}{
e^{\kappa b} - e^{\kappa a}
} \textrm{I}(a \leq x \leq b)
}
}
\examples{
set.seed(1234)
kappa = 2
lo = -0.5
hi = +0.5

x = r_texp(100000, kappa, lo, hi)
xx = seq(min(x), max(x), length.out = 100)

hist(x, probability = TRUE)
lines(xx, d_texp(xx, kappa, lo, hi), lty = 2, col = "blue", lwd = 2)

plot(ecdf(x))
lines(xx, p_texp(xx, kappa, lo, hi), lty = 2, col = "blue", lwd = 2)

pp = seq(0, 1, length.out = 102) |> head(-1) |> tail(-1)
qq = quantile(x, probs = pp)
plot(pp, qq)
lines(pp, q_texp(pp, kappa, lo, hi), lty = 2, col = "blue", lwd = 2)

n_texp(kappa, lo, hi)
n_texp(kappa, lo, hi, log = TRUE)

integrate_texp(0, hi, kappa, lo, hi)
integrate_texp(0, hi, kappa, lo, hi, log = TRUE)

mgf_texp(0, kappa, lo, hi)
mgf_texp(0, kappa, lo, hi, log = TRUE)
mgf_texp(0.5, kappa, lo, hi)
mgf_texp(0.5, kappa, lo, hi, log = TRUE)

}
